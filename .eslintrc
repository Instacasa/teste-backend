{
  "env": {
    "node": true,
    "es6": true,
    "jest": true
  },
  "parserOptions": {
    "ecmaVersion": 2017
  },
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "unused-imports",
    "no-floating-promise"
  ],
  "root": true,
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "rules": {
    "comma-spacing": ["error", { "before": false, "after": true }],
    "indent": ["error", 2],
    "quotes": ["error", "single"],
    "semi": ["error", "always"],
    "space-infix-ops": ["error", { "int32Hint": false }],
    "@typescript-eslint/no-unused-vars": "off",
		"unused-imports/no-unused-imports": "error",
		// "unused-imports/no-unused-vars": [
		// 	"warn",
		// 	{ "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
    // ],
    "@typescript-eslint/no-explicit-any": "off",
    "import/no-unresolved": [2, { "caseSensitive": true }],
    "import/no-named-as-default-member": "off",
    "import/no-named-as-default": "off",
    // "@typescript-eslint/explicit-module-boundary-types": "off" //Habilitar para verificar erros do lint com maior facilidade
    "max-len": [0, {"code": 160}]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      // use <root>/tsconfig.json
      "typescript": {
        "alwaysTryTypes": true // always try to resolve types under `<roo/>@types` directory even it doesn't contain any source code, like `@types/unist`
      }
    }
  }
}
